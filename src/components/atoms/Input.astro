---
interface Props {
  type?: 'text' | 'email' | 'password' | 'number' | 'tel' | 'url' | 'search' | 'date' | 'textarea';
  name: string;
  id?: string;
  label?: string;
  placeholder?: string;
  required?: boolean;
  value?: string;
  class?: string;
  rows?: number;
  error?: string;
}

const { 
  type = 'text', 
  name, 
  id = name, 
  label, 
  placeholder, 
  required = false,
  value = '',
  class: className = '',
  rows = 3,
  error
} = Astro.props;

const baseClasses = 'block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm';
const errorClasses = error ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : '';
const inputClasses = `${baseClasses} ${errorClasses} ${className}`;
---

<div class="space-y-1">
  {label && (
    <label for={id} class="block text-sm font-medium text-gray-700">
      {label}
      {required && <span class="text-red-500">*</span>}
    </label>
  )}
  
  {type === 'textarea' ? (
    <textarea
      name={name}
      id={id}
      rows={rows}
      placeholder={placeholder}
      required={required}
      class={inputClasses}
      value={value}
    ></textarea>
  ) : (
    <input
      type={type}
      name={name}
      id={id}
      placeholder={placeholder}
      required={required}
      class={inputClasses}
      value={value}
    />
  )}
  
  {error && (
    <p class="text-sm text-red-600">{error}</p>
  )}
</div>